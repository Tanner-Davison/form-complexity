{"ast":null,"code":"var _jsxFileName = \"/Users/tannerdavison/Desktop/form_complexity/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const enteredNameRef = useRef(\"\");\n  const [enteredNameisValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  useEffect = (() => {\n    if (enteredNameisValid) {\n      console.log(\"Name input is invalid\");\n    }\n  }, [enteredNameisValid, enteredNameTouched]);\n  const nameChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const submitFormHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValueRef = enteredNameRef.current.value;\n    console.log(enteredValueRef);\n    enteredNameRef.current.value = \"\";\n    setEnteredName(\"\");\n  };\n  const nameInputisInvalid = !enteredNameisValid && enteredNameTouched;\n  const nameInputClasses = !enteredNameisValid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: enteredNameRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), enteredNameisValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name Must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n_s(SimpleInput, \"gjbZ3WSe9/LBG66TqW/rlE9NWF0=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","useEffect","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredNameRef","enteredNameisValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","console","log","nameChangeHandler","event","target","value","submitFormHandler","preventDefault","trim","enteredValueRef","current","nameInputisInvalid","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","id","onChange","_c","$RefreshReg$"],"sources":["/Users/tannerdavison/Desktop/form_complexity/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n\tconst [enteredName, setEnteredName] = useState(\"\");\n\tconst enteredNameRef = useRef(\"\");\n\tconst [enteredNameisValid, setEnteredNameIsValid] = useState(false);\n\tconst [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n\tuseEffect =\n\t\t(() => {\n\t\t\tif (enteredNameisValid) {\n\t\t\t\tconsole.log(\"Name input is invalid\");\n\t\t\t}\n\t\t},\n      [enteredNameisValid, enteredNameTouched]);\n  \n\tconst nameChangeHandler = (event) => {\n\t\tsetEnteredName(event.target.value);\n\t};\n\tconst submitFormHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tsetEnteredNameTouched(true);\n\t\tif (enteredName.trim() === \"\") {\n\t\t\tsetEnteredNameIsValid(false);\n\t\t\treturn;\n\t\t}\n\t\tsetEnteredNameIsValid(true);\n\t\tconsole.log(enteredName);\n\n\t\tconst enteredValueRef = enteredNameRef.current.value;\n\t\tconsole.log(enteredValueRef);\n\n\t\tenteredNameRef.current.value = \"\";\n\n\t\tsetEnteredName(\"\");\n\t};\n  const nameInputisInvalid = !enteredNameisValid && enteredNameTouched\n\tconst nameInputClasses = !enteredNameisValid\n\t\t? \"form-control\"\n\t\t: \"form-control invalid\";\n\n\treturn (\n\t\t<form onSubmit={submitFormHandler}>\n\t\t\t<div className={nameInputClasses}>\n\t\t\t\t<label htmlFor='name'>Your Name</label>\n\t\t\t\t<input\n\t\t\t\t\tref={enteredNameRef}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='name'\n\t\t\t\t\tonChange={nameChangeHandler}\n\t\t\t\t\tvalue={enteredName}\n\t\t\t\t/>\n\t\t\t\t{enteredNameisValid && (\n\t\t\t\t\t<p className={\"error-text\"}>Name Must not be empty</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className='form-actions'>\n\t\t\t\t<button>Submit</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}