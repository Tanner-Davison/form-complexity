{"ast":null,"code":"var _jsxFileName = \"/Users/tannerdavison/Desktop/form_complexity/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const enteredNameRef = useRef(\"\");\n  const [enteredNameisValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (!enteredNameisValid) {\n      console.log(\"Name input is invalid\");\n    }\n  }, [enteredNameisValid, enteredNameTouched]);\n  const nameChangeHandler = event => {\n    setEnteredName(event.target.value);\n    setEnteredName;\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n  };\n  const submitFormHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValueRef = enteredNameRef.current.value;\n    console.log(enteredValueRef);\n    enteredNameRef.current.value = \"\";\n    setEnteredName(\"\");\n  };\n  const nameInputisInvalid = !enteredNameisValid && enteredNameTouched;\n  const nameInputClasses = nameInputisInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: enteredNameRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), nameInputisInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name Must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n_s(SimpleInput, \"crULpuM7VivMuK77xm7at4op8A4=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","useEffect","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredNameRef","enteredNameisValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","console","log","nameChangeHandler","event","target","value","nameInputBlurHandler","trim","submitFormHandler","preventDefault","enteredValueRef","current","nameInputisInvalid","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","id","onChange","onBlur","_c","$RefreshReg$"],"sources":["/Users/tannerdavison/Desktop/form_complexity/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport { useEffect } from \"react\";\nconst SimpleInput = (props) => {\n\tconst [enteredName, setEnteredName] = useState(\"\");\n\tconst enteredNameRef = useRef(\"\");\n\tconst [enteredNameisValid, setEnteredNameIsValid] = useState(false);\n\tconst [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (!enteredNameisValid) {\n\t\t\tconsole.log(\"Name input is invalid\");\n\t\t}\n\t}, [enteredNameisValid, enteredNameTouched]);\n\n\tconst nameChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n    setEnteredName\n  };\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n\t\t\tsetEnteredNameIsValid(false);\n\t\t\treturn;\n\t\t}\n\n  }\n\tconst submitFormHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tsetEnteredNameTouched(true);\n\t\tif (enteredName.trim() === \"\") {\n\t\t\tsetEnteredNameIsValid(false);\n\t\t\treturn;\n\t\t}\n\t\tsetEnteredNameIsValid(true);\n\t\tconsole.log(enteredName);\n\n\t\tconst enteredValueRef = enteredNameRef.current.value;\n\t\tconsole.log(enteredValueRef);\n\n\t\tenteredNameRef.current.value = \"\";\n\n\t\tsetEnteredName(\"\");\n\t};\n\tconst nameInputisInvalid = !enteredNameisValid && enteredNameTouched;\n\n\tconst nameInputClasses = nameInputisInvalid\n\t\t? \"form-control invalid\"\n\t\t: \"form-control\";\n\n\treturn (\n\t\t<form onSubmit={submitFormHandler}>\n\t\t\t<div className={nameInputClasses}>\n\t\t\t\t<label htmlFor='name'>Your Name</label>\n\t\t\t\t<input\n\t\t\t\t\tref={enteredNameRef}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='name'\n          onChange={nameChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n          \n\t\t\t\t/>\n\t\t\t\t{nameInputisInvalid && (\n\t\t\t\t\t<p className={\"error-text\"}>Name Must not be empty</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className='form-actions'>\n\t\t\t\t<button>Submit</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}