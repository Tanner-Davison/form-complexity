{"ast":null,"code":"var _jsxFileName = \"/Users/tannerdavison/Desktop/form_complexity/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const enteredNameisValid = enteredName.trim() !== \"\";\n  const nameInputisInvalid = !enteredNameisValid && enteredNameTouched;\n  useEffect(() => {\n    if (enteredNameisValid) {\n      setFormIsValid();\n    }\n  }, [enteredNameisValid]);\n  const nameChangeHandler = event => {\n    setEnteredName(event.target.value);\n    setEnteredNameTouched(false);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const submitFormHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameisValid) {\n      return;\n    }\n    console.log(enteredName);\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n  };\n  const nameInputClasses = nameInputisInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), nameInputisInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name Must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n_s(SimpleInput, \"Bi7Che7mVMXsk72OJeAbQsWE9xA=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","formIsValid","setFormIsValid","enteredNameisValid","trim","nameInputisInvalid","nameChangeHandler","event","target","value","nameInputBlurHandler","submitFormHandler","preventDefault","console","log","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","_c","$RefreshReg$"],"sources":["/Users/tannerdavison/Desktop/form_complexity/src/components/SimpleInput.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\n\n\nconst SimpleInput = (props) => {\n\n\tconst [enteredName, setEnteredName] = useState(\"\");\n\tconst [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid,setFormIsValid]=useState(false)\n\tconst enteredNameisValid = enteredName.trim() !== \"\";\n  const nameInputisInvalid = !enteredNameisValid && enteredNameTouched;\n\n  useEffect(() => {\n    if (enteredNameisValid) {\n      setFormIsValid()\n    }\n  },[enteredNameisValid])\n\tconst nameChangeHandler = (event) => {\n\t\tsetEnteredName(event.target.value);\n\n\t\tsetEnteredNameTouched(false);\n  };\n  \n\tconst nameInputBlurHandler = (event) => {\n\t\tsetEnteredNameTouched(true);\n  };\n  \n\tconst submitFormHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tsetEnteredNameTouched(true);\n    if (!enteredNameisValid) {\n      return;\n    }\n\t\tconsole.log(enteredName);\n\n    setEnteredName(\"\");\n    setEnteredNameTouched(false)\n  };\n  \n\t\n\n\tconst nameInputClasses = nameInputisInvalid\n\t\t? \"form-control invalid\"\n\t\t: \"form-control\";\n\n\treturn (\n\t\t<form onSubmit={submitFormHandler}>\n\t\t\t<div className={nameInputClasses}>\n\t\t\t\t<label htmlFor='name'>Your Name</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='name'\n\t\t\t\t\tonChange={nameChangeHandler}\n\t\t\t\t\tonBlur={nameInputBlurHandler}\n\t\t\t\t\tvalue={enteredName}\n\t\t\t\t/>\n\t\t\t\t{nameInputisInvalid && (\n\t\t\t\t\t<p className={\"error-text\"}>Name Must not be empty</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className='form-actions'>\n\t\t\t\t<button>Submit</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}