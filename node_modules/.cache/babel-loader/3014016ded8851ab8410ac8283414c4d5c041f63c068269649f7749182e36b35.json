{"ast":null,"code":"var _jsxFileName = \"/Users/tannerdavison/Desktop/form_complexity/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailTouched, setEmailTouched] = useState(false);\n  let formIsValid = false;\n  const enteredEmailIsValid = enteredEmail.includes(\"@\");\n  const emailInputIsInvalid = !enteredEmailIsValid && emailTouched;\n  const enteredNameisValid = enteredName.trim() !== \"\";\n  const nameInputisInvalid = !enteredNameisValid && enteredNameTouched;\n  if (enteredNameisValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const nameChangeHandler = event => {\n    setEnteredName(event.target.value);\n    setEnteredNameTouched(false);\n  };\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n    setEmailTouched(true);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputBlurHandler = event => {\n    setEmailTouched(true);\n  };\n  const submitFormHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameisValid) {\n      return;\n    }\n    console.log(enteredName);\n    console.log(enteredEmail);\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputisInvalid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), nameInputisInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name Must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: emailChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email Must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n};\n_s(SimpleInput, \"5dZT9nFHy4zOVK8IIrsEjobT51Q=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","emailTouched","setEmailTouched","formIsValid","enteredEmailIsValid","includes","emailInputIsInvalid","enteredNameisValid","trim","nameInputisInvalid","nameChangeHandler","event","target","value","emailChangeHandler","nameInputBlurHandler","emailInputBlurHandler","submitFormHandler","preventDefault","console","log","setEnteredEmailTouched","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/tannerdavison/Desktop/form_complexity/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n\tconst [enteredName, setEnteredName] = useState(\"\");\n\tconst [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\tconst [enteredEmail, setEnteredEmail] = useState(\"\");\n\tconst [emailTouched, setEmailTouched] = useState(false);\n\n\tlet formIsValid = false;\n\n\tconst enteredEmailIsValid = enteredEmail.includes(\"@\");\n\tconst emailInputIsInvalid = !enteredEmailIsValid && emailTouched;\n\n\tconst enteredNameisValid = enteredName.trim() !== \"\";\n\n\tconst nameInputisInvalid = !enteredNameisValid && enteredNameTouched;\n\n\tif (enteredNameisValid && enteredEmailIsValid) {\n\t\tformIsValid = true;\n\t}\n\n\tconst nameChangeHandler = (event) => {\n\t\tsetEnteredName(event.target.value);\n\n\t\tsetEnteredNameTouched(false);\n\t};\n\tconst emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n    setEmailTouched(true)\n\t};\n\tconst nameInputBlurHandler = (event) => {\n\t\tsetEnteredNameTouched(true);\n  };\n  const emailInputBlurHandler = event => {\n    setEmailTouched(true)\n  }\n\n\tconst submitFormHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tsetEnteredNameTouched(true);\n\t\tif (!enteredNameisValid) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(enteredName);\n\t\tconsole.log(enteredEmail);\n\n\t\tsetEnteredName(\"\");\n\t\tsetEnteredEmail(\"\");\n\t\tsetEnteredNameTouched(false);\n\t\tsetEnteredEmailTouched(false);\n\t};\n\n\tconst nameInputClasses = nameInputisInvalid\n\t\t? \"form-control invalid\"\n\t\t: \"form-control\";\n\tconst emailInputClasses = emailInputIsInvalid\n\t\t? \"form-control invalid\"\n\t\t: \"form-control\";\n\n\treturn (\n\t\t<form onSubmit={submitFormHandler}>\n\t\t\t<div className={nameInputClasses}>\n\t\t\t\t<label htmlFor='name'>Your Name</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='name'\n\t\t\t\t\tonChange={nameChangeHandler}\n\t\t\t\t\tonBlur={nameInputBlurHandler}\n\t\t\t\t\tvalue={enteredName}\n\t\t\t\t/>\n\t\t\t\t{nameInputisInvalid && (\n\t\t\t\t\t<p className={\"error-text\"}>Name Must not be empty</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className='form-actions'>\n\t\t\t\t<button disabled={!formIsValid}>Submit</button>\n\t\t\t</div>\n\t\t\t<div className={nameInputClasses}>\n\t\t\t\t<label htmlFor='name'>Your Name</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='name'\n\t\t\t\t\tonChange={emailChangeHandler}\n\t\t\t\t\tonBlur={emailInputBlurHandler}\n\t\t\t\t\tvalue={enteredName}\n\t\t\t\t/>\n\t\t\t\t{emailInputIsInvalid && (\n\t\t\t\t\t<p className={\"error-text\"}>Email Must not be empty</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}